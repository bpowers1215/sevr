#!/usr/bin/env node

/*eslint no-console: 0 */

const fs       = require('fs')
const path     = require('path')
const jsdoc2md = require('jsdoc-to-markdown')

const paths = [
	{ src: 'index.js', dest: 'docs/api/Sevr.md' },
	{ src: 'collection/index.js', dest: 'docs/api/Collection.md' },
	{ src: 'authentication/index.js', dest: 'docs/api/Authentication.md' },
	{ src: 'collection-factory/index.js', dest: 'docs/api/CollectionFactory.md' },
]

const promises = paths
	.map(path => {
		return Object.assign({}, path, {
			contents: jsdoc2md.renderSync({ files: path.src })
		})
	})
	.map(file => {
		return createDir(path.dirname(file.dest))
			.then(() => {
				return writeToFile(file.dest, file.contents)
			})
			.then(() => {
				return file
			})
	})

Promise.all(promises)
	.then(files => {
		files.forEach(file => {
			console.log(`Wrote ${file.src} => ${file.dest}`)
		})
	})


function createDir(dirname) {
	return new Promise(res => {
		fs.access(dirname, fs.constants.F_OK, err => {
			if (err) fs.mkdirSync(dirname)
			res()
		})
	})
}

function writeToFile(dest, data) {
	return new Promise((res, rej) => {
		fs.writeFile(dest, data, err => {
			if (err) return rej(err)
			res()
		})
	})
}